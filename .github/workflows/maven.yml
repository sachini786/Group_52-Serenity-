# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Install Dependencies and Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl unzip
        sudo apt-get install -y libnss3 libatk-bridge2.0-0 libx11-xcb1 libxcomposite1 libxcursor1 libxi6 libxrandr2 libgbm1 libasound2 libu2f-udev
        sudo apt-get install -y libicu70
        
        # Download and install Google Chrome for Testing
        export CHROME_VERSION=131.0.6778.204
        curl -sSL https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chrome-headless-shell-linux64.zip -o chrome-headless-shell-linux64.zip
        unzip chrome-headless-shell-linux64.zip
        
        # Move the 'chrome-headless-shell' binary to /usr/bin
        if [ -f "chrome-headless-shell-linux64/chrome-headless-shell" ]; then
          sudo mv chrome-headless-shell-linux64/chrome-headless-shell /usr/bin/google-chrome
        else
          echo "Chrome binary not found in the expected location."
          exit 1
        fi
        
        # Verify installation
        google-chrome --version
      
    - name: Run API jar
      run: java -jar ./api-testing/src/test/resources/libs/demo-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
        
    - name: Run Test Automation with Maven
      run: mvn clean verify
