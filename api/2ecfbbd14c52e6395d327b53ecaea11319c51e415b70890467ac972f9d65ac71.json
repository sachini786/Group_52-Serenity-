{"name":"GET a book with a valid ID format as an regular user when book exists","id":"get-a-book-by-id;get-a-book-with-a-valid-id-format-as-an-regular-user-when-book-exists","testSteps":[{"number":1,"description":"Given the book exists","duration":97,"startTime":"2025-01-05T06:58:02.413655202Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":2,"description":"POST http://localhost:7081/api/books","duration":0,"startTime":"2025-01-05T06:58:02.508662947Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"POST","path":"http://localhost:7081/api/books","content":"{\n    \"title\": \"Harry Potter\",\n    \"author\": \"JK Rolling\"\n}","contentType":"application/json","requestHeaders":"Accept\u003d*/*\n\t\t\t\tContent-Type\u003dapplication/json; charset\u003dUTF-8","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003dA475F13D59906686146B80B47C88E395; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Sun, 05 Jan 2025 06:58:02 GMT\nKeep-Alive: timeout\u003d60\nConnection: keep-alive","responseCookies":"JSESSIONID\u003dA475F13D59906686146B80B47C88E395;Path\u003d/;HttpOnly","responseBody":"{\n    \"id\": 10,\n    \"title\": \"Harry Potter\",\n    \"author\": \"JK Rolling\"\n}","statusCode":201},"precondition":false,"level":1}]},{"number":3,"description":"Given regular user wants to get book the ID is valid","duration":0,"startTime":"2025-01-05T06:58:02.511170394Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0},{"number":4,"description":"When user calls service to get the book with ID","duration":83,"startTime":"2025-01-05T06:58:02.512286526Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":5,"description":"GET http://localhost:7081/api/books/10","duration":0,"startTime":"2025-01-05T06:58:02.595210611Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"GET","path":"http://localhost:7081/api/books/10","content":"","contentType":"null","requestHeaders":"Accept\u003d*/*","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003d87552A41C2315D2652B97021DA07B485; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: text/plain;charset\u003dUTF-8\nContent-Length: 22\nDate: Sun, 05 Jan 2025 06:58:02 GMT\nKeep-Alive: timeout\u003d60\nConnection: keep-alive","responseCookies":"JSESSIONID\u003d87552A41C2315D2652B97021DA07B485;Path\u003d/;HttpOnly","responseBody":"User is not permitted.","statusCode":403},"precondition":false,"level":1}]},{"number":6,"description":"Then user expects response status to be 200","duration":4,"startTime":"2025-01-05T06:58:02.596216167Z[Etc/UTC]","exception":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c403\u003e.\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":674},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":126},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":134},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"statusCode","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":89},{"declaringClass":"io.restassured.internal.ValidatableResponseImpl","methodName":"super$2$statusCode","fileName":"ValidatableResponseImpl.groovy","lineNumber":-1},{"declaringClass":"groovy.lang.MetaMethod","methodName":"doMethodInvoke","fileName":"MetaMethod.java","lineNumber":323},{"declaringClass":"groovy.lang.MetaClassImpl","methodName":"invokeMethod","fileName":"MetaClassImpl.java","lineNumber":1268},{"declaringClass":"io.restassured.internal.ValidatableResponseImpl","methodName":"statusCode","fileName":"ValidatableResponseImpl.groovy","lineNumber":142},{"declaringClass":"io.restassured.internal.ValidatableResponseImpl","methodName":"statusCode","fileName":"ValidatableResponseImpl.groovy","lineNumber":-1},{"declaringClass":"org.example.stepdefinitions.GetBookByIDStepDefinitions","methodName":"responseStatusCodeShouldBe","fileName":"GetBookByIDStepDefinitions.java","lineNumber":115},{"declaringClass":"✽","methodName":"user expects response status to be 200","fileName":"file:///home/runner/work/Group_52-Serenity-/Group_52-Serenity-/api-testing/src/test/resources/features/GetBookByID.feature","lineNumber":27}]},"result":"FAILURE","precondition":false,"level":0},{"number":7,"description":"And user expects response should contain the book details with ID","duration":1,"startTime":"2025-01-05T06:58:02.600802532Z[Etc/UTC]","result":"SKIPPED","precondition":false,"level":0},{"number":8,"description":"DELETE http://localhost:7081/api/books/10","duration":0,"startTime":"2025-01-05T06:58:02.687071704Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"DELETE","path":"http://localhost:7081/api/books/10","content":"","contentType":"null","requestHeaders":"Accept\u003d*/*","requestCookies":"","responseHeaders":"Set-Cookie: JSESSIONID\u003d3CA3DD9372EF36B0AC65FC99ED20500C; Path\u003d/; HttpOnly\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode\u003dblock\nCache-Control: no-cache, no-store, max-age\u003d0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Length: 0\nDate: Sun, 05 Jan 2025 06:58:02 GMT\nKeep-Alive: timeout\u003d60\nConnection: keep-alive","responseCookies":"JSESSIONID\u003d3CA3DD9372EF36B0AC65FC99ED20500C;Path\u003d/;HttpOnly","statusCode":200},"precondition":false,"level":0}],"userStory":{"id":"get-a-book-by-id","storyName":"GET a book by ID","path":"GetBookByID.feature","type":"feature"},"featureTag":{"name":"GET a book by ID","type":"feature","displayName":"GET a book by ID"},"title":"GET a book with a valid ID format as an regular user when book exists","description":"","tags":[{"name":"GET a book by ID","type":"feature","displayName":"GET a book by ID"},{"name":"ValidIdFormat-RegularUser","type":"tag","displayName":"ValidIdFormat-RegularUser"}],"startTime":"2025-01-05T06:58:02.411772239Z[Etc/UTC]","duration":276,"testFailureCause":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c403\u003e.\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":674},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":126},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":134},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"statusCode","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":89},{"declaringClass":"io.restassured.internal.ValidatableResponseImpl","methodName":"super$2$statusCode","fileName":"ValidatableResponseImpl.groovy","lineNumber":-1},{"declaringClass":"groovy.lang.MetaMethod","methodName":"doMethodInvoke","fileName":"MetaMethod.java","lineNumber":323},{"declaringClass":"groovy.lang.MetaClassImpl","methodName":"invokeMethod","fileName":"MetaClassImpl.java","lineNumber":1268},{"declaringClass":"io.restassured.internal.ValidatableResponseImpl","methodName":"statusCode","fileName":"ValidatableResponseImpl.groovy","lineNumber":142},{"declaringClass":"io.restassured.internal.ValidatableResponseImpl","methodName":"statusCode","fileName":"ValidatableResponseImpl.groovy","lineNumber":-1},{"declaringClass":"org.example.stepdefinitions.GetBookByIDStepDefinitions","methodName":"responseStatusCodeShouldBe","fileName":"GetBookByIDStepDefinitions.java","lineNumber":115},{"declaringClass":"✽","methodName":"user expects response status to be 200","fileName":"file:///home/runner/work/Group_52-Serenity-/Group_52-Serenity-/api-testing/src/test/resources/features/GetBookByID.feature","lineNumber":27}]},"testFailureClassname":"java.lang.AssertionError","testFailureMessage":"1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c403\u003e.\n","testFailureSummary":"FAILURE;java.lang.AssertionError;1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c403\u003e.\n;ResponseSpecificationImpl.groovy","projectKey":"","annotatedResult":"FAILURE","isManualTestingUpToDate":false,"manual":false,"testSource":"Cucumber","result":"FAILURE"}